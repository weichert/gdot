#!/bin/sh

version="0.0.0"

usage_string="usage: gdot [--version] [--help] <command> [<args>]\n"

long_usage_string=\
""$usage_string"
Commands:
   clean     Clean deployment tree from broken or renamed symlinks
   deploy    Deploy a working tree into the deployment tree
   git       Executes any git command given to it in the gdot repository
   init      Create an empty gdot repository or reinitialize an existing one
   status    Show the deployment tree status
   track     Add files to the repository and start following changes
   untrack   Remove files from the repository and stop following changes\n"

# TODO: functions I might want to have:
#       ??()  traversing the filesystem and honoring ignores

die () {
	printf "$*" >&2
	exit 1
}

__git () {
	exit $?
}

__clean () {
	# TODO: --ignored  traverse ignored files and directories
	exit $?
}

__deploy () {
	# TODO: --clean
	exit $?
}

__init () {
	exit $?
}

#
#  STATUS COMMAND
#

__status () {
	usage_string="usage: gdot status [<options>...] [--] [<file>...]\n"

	long_usage_string=\
""$usage_string"
Options:
   --help     display this help
   --ignored  traverse ignored files and directories\n"

	full_args="$@"
	ignored=false

	while test $# != 0
	do
		case "$1" in
		--help)
			printf "$long_usage_string"
			exit 0 ;;
		--ignored)
			ignored=true
			shift ;;
		--)
			shift
			break ;;
		-*|--*)
			die "Unknown option: "$1"\n"$usage_string"" ;;
		*)
			break ;;
		esac
	done

	# TODO: Mockup to learn about terminfo stuff and understand what you
	#       would want from the UI

	printf \
"No symbolic links found:
  There are files in the work tree but there are no corresponding symbolic
  links in the deploy tree.
  (use \"gdot deploy\" to update all symbolic links)
$(tput setaf 1)
    ?? -> .vim
$(tput sgr0)\n"
	printf \
"Broken symbolic links found:
  There are symbolic links in the deploy tree but there are no corresponding
  files in the work tree.
  (use \"gdot clean\" to clean up invalid links in your deploy tree)
$(tput setaf 1)
    .profile -> ??
$(tput sgr0)\n"
	printf \
"Polluted symbolic links found:
  Shenanigans. There are symbolic links in the deploy tree linking to existing
  files in the work tree but they are in unexpected places or have unexpected
  names.
  (use \"gdot deploy --clean\" to clean up and update all symbolic links)
$(tput setaf 1)
    .testfile -> .bashrc
$(tput sgr0)\n"
	printf \
"Conflicting files found:
  There are files in the work tree and files in corresponding places in the
  deploy tree. Refer to the documentation on how to resolve conflicts.
  (use \"gdot git commit\" to commit any changes)
  (use \"gdot deploy\" to update all symbolic links)
$(tput setaf 1)
    .screenrc
$(tput sgr0)\n"
	exit $?
}

__track () {
	exit $?
}

__untrack () {
	# TODO: --clean
	exit $?
}

#
#  MAIN UI ROUTER
#

if test $# != 0
then
	case "$1" in
	--version)
		printf "gdot version $version\n"
		exit 0 ;;
	--help)
		case "$2" in
		clean)
			__clean --help ;;
		deploy)
			__deploy --help ;;
		init)
			__init --help ;;
		status)
			__status --help ;;
		track)
			__track --help ;;
		untrack)
			__untrack --help ;;
		*)
			printf "$long_usage_string"
			exit 0 ;;
		esac
		;;
	-*|--*)
		die "Unknown option: "$1"\n"$usage_string"" ;;
	clean)
		shift
		__clean "$@" ;;
	deploy)
		shift
		__deploy "$@" ;;
	git)
		shift
		__git "$@" ;;
	init)
		shift
		__init "$@" ;;
	status)
		shift
		__status "$@" ;;
	track)
		shift
		__track "$@" ;;
	untrack)
		shift
		__untrack "$@" ;;
	*)
		die "gdot: '"$1"' is not a gdot command. See 'gdot --help'.\n" ;;
	esac
else
	die "$long_usage_string"
fi
